name: CI/CD Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Dockerイメージをビルド
      - name: Build Docker image
        run: |
          docker build -t my-app:latest .

      # Dockerイメージをアップロードする場合（DockerHubなど）
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag my-app:latest ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Dockerイメージを使用してESLintを実行
      - name: Run ESLint
        run: |
          docker run --rm my-app:latest npx eslint -c eslint.config.mjs .

  e2e:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Dockerイメージを使用してE2Eテストを実行
      - name: Run E2E tests
        run: |
          docker run --rm -e REACT_APP_API_URL=http://localhost:3000 \
            -e REACT_APP_TEST_EMAIL=${{ secrets.REACT_APP_TEST_EMAIL }} \
            -e REACT_APP_TEST_PASSWORD=${{ secrets.REACT_APP_TEST_PASSWORD }} \
            my-app:latest npm run test:e2e

  deploy:
  runs-on: ubuntu-latest
  needs: 
    - lint  # Lintが成功した場合のみ実行
    - e2e   # E2Eテストが成功した場合のみ実行
  steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Deploy Functions to Firebase
      run: |
        echo "${{ secrets.FIREBASE_TOKEN }}" | firebase login:ci --token "${{ secrets.FIREBASE_TOKEN }}"
        firebase deploy --only functions --project "${{ secrets.FIREBASE_PROJECT_ID }}" --token "${{ secrets.FIREBASE_TOKEN }}"

    - name: Deploy Hosting to Firebase
      run: |
        firebase deploy --only hosting --project "${{ secrets.FIREBASE_PROJECT_ID }}" --token "${{ secrets.FIREBASE_TOKEN }}"
